// console.log(1);

// let hour = 11;
//
// if (hour < 10 || hour > 18 ) {
//     console.log('закрыто');
// }

///////

// alert( false || false ); // false
// alert( true || true );   // true
// alert( false || true );  // true
// alert( true || false );  // true

///////

// let hour2 = 12;
// let isWeekend = true;
//
// if (hour2 < 10 || hour2 > 18 || isWeekend) {
//     alert( 'Офис закрыт.' ); // это выходной
// }

////////

// alert( 1 || 0 ); // 1 (1 - истинное значение)
// alert( true || 'какая-то строка' ); // true
//
// alert( null || 1 ); // 1 (первое истинное значение)
// alert( null || 0 || 1 ); // 1 (первое истинное значение)
// alert( undefined || null || 0 ); // 0 (поскольку все ложно, возвращается последнее значение)

///////

// let firstName = "";
// let lastName = "";
// let nickName = "Суперкодер";

//alert( firstName || lastName || nickName || "Аноним"); // Суперкодер

// alert( true && true );   // true
// alert( false && true );  // false
// alert( true && false );  // false
// alert( false && false ); // false

// что И && возвращает первое ложное значение false или последнее значение true, если все значения истинны
// а ИЛИ || первое истинное true.

////////

//alert (1 && 2 && 3 && 4 && 5); // 5

////////

// alert( alert(1) || 2 || alert(3) );
// Вызов alert не возвращает значения, или, иначе говоря, возвращает undefined.
//
//     Первый оператор ИЛИ || выполнит первый alert(1).
//     Получит undefined и пойдёт дальше, ко второму операнду в поисках истинного значения.
//     Так как второй операнд 2 является истинным, то вычисления завершатся, результатом undefined || 2 будет 2, которое будет выведено внешним alert( .... ).
// Второй оператор || не будет выполнен, выполнение до alert(3) не дойдёт, поэтому 3 выведено не будет.

////////////////////
////////////////////

// let x = 5;
// alert(x++); //5 сначала исх знач
// alert(x); //6


//////////////////


// чему равно [] + false - null + true

// console.log([] + false - null + true); // пустой массив - строка - пустая строка + false = false(строка)
// false (строка) - null = NaN (отнимаем другой тип данных от строки - получаем NaN - при выполнении нематематичсеких операций)
// NaN + true = NaN


///////////////////

// let y = 1;
// let x = y = 2;
// alert(x);

/////////////////////

console.log([] + 1 + 2);
// пустая строка + 1 = 1 строка
// + 2 = 12

////////////////////

console.log('1'[0]); // первый символ [0] строки "1" = 1

///////////////////

console.log(2 && 1 && null && 0 && undefined); //результат выражения 2 && 1 && null && 0 && undefined будет null,
// так как первое ложное значение, null, останавливает дальнейшую проверку.

///////////////////

//разница между выражениями !!(a && b) и (a && b)
// !! - превращают следующие за ними выражение в булиновое
// console.log(!!(1 && 2) === (1 && 2)); - так будет не верно.
console.log(!!(true && true) === (true && true));
//  && возвращает первое ложное значение false или последнее значение true, если все значения истинны
// если a и b булинового типа typeof, тогда a === b будет верным утверждением.

// && запинается на лжи false
// || запинается на правде true

///////////////////

console.log(null || 2 && 3 || 4); // приоритет логических операций e && --- сначала сравнивает 2 и 3, будет 3.

// или - || первое истинное true или последнее false, если все значения ложь
// || вернет нам первое true - 3/

///////////////////

// a = [1,2,3] == b = [1,2,3] ?
console.log([1,2,3] ==[1,2,3]); // false

//////////////////

console.log(+"infinity"); // Nan
console.log("Ёжик" > "яблоко"); // сравнение посимвольно Ё < я. --- false
console.log(0 || '' || 2 || undefined || true || false);

